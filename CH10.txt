<Program organization>

<Local Variables>
- a variable declared in the body of the function is said to be local
- storage for a local variable is automatically allocated when the funciton is called and deallocated when the function returns
- has block scope (scope: portion of a program text in which the variable can be referenced
  - the varable is visible from its declaration to the end of its enclosing function body

<static local variables>
 - a variable with static storage duration has a permanent storage duration // 프로그램이 종료될 때까지 메모리 자리를 차지함 ㄷㄷ
 - has a form
 static int i;
 - A static local variable still has block scope (not visible to other function)
 * local variable 과 parameter의 다른 점은 parameter가 함수가 시작될 때 입력받은 Argument의 값으로 초기화된다는 것 외에는 없다
 ** 일반적인 지역변수의 경우 재귀할 때 새로 메모리 주소가 지정되는 반면 static 지역변수는 같은 메모리 자리를 유지한다

<External variables>
- variables that are declared outside the body of any function
- static storage duration (value stored in an external variable will stay there indefinitely)
- file scope (visible from its declaration to the end of its enclosing file)
- stack자료구조처럼 다양한 함수에서 변수로의 접근,수정이 필요한 경우 사용할 수 있다
- 매개변수를 쓰는 게 더 좋을 수가 있는데 이는 1. 수정이 힘들고 2. 오류가 났을 때 무슨 함수가 잘못된 건지 알기도 힘들고 3. 나중에 다른데 써먹기도 힘들기 때문

<Blocks>
- has a form
{declarations statements}
- the storage duration of a variable declared in a block is automatic
- block scope: can't be referenced outside of the block
- block을 사용하면 함수 초반에 선언문들이 잔뜩 나와서 복잡해지는 걸 피할 수 있고(1) 변수가 block 안에서만 사용가능하기 때문에 나주에 변수명 꼬이는 것도 막을 수 있다. (local variable의 장점인데 더 작은 범위에서 적용되는 듯)

<Scope>
- When a declaration inside a block names an identifier that's already visible, the new declaration temporarily hides the old one
* 대충 확인해 보니까 같은 블럭 내에서의 재선언은 불가능하고 블럭 안의 블럭에서의 재선언만 가능한 듯

<Organizing a C program>
- 일단 프로그램이 한 파일 내에 다 들어간다고 가정한다 (많은 파일로 나눠진 프로그램에 대해서는 15장에서 설명한다고 하네용)
- rules on the order of the items
  - A preprocessing directives doesn't take effect until the line on which it appears
  - A type name can't be used until it's been defined
  - A variable can't be used until it is declared
  - A function should defined or delared before its first call (C89에서는 필수사항이 아니지만 지켜서 나쁠 게 없으니까 지키라고 하네용)
