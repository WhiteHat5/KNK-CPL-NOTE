printf function 에 대하여 알아보자

Conversion Specifier
printf function에서 formatted string 안에 들어있는 형태로 나오며 printf에서 지정된 변수의 자리를 표시하고 출력형태를 정의하는 역할을 가지고 있다.
변수보다 conversion specifier가 많으면?
--> 변수의 개수만큼 올바르게 출력된 다음에 의미없는 값이 출력된다.
변수가 적으면?
-->  conversion specifier의 개수만큼만 출력되고 그 이후의 변수들은 출력이 되지 않는다
conversion specifier와 변수의 타입이 다르면?
--> conversion specifier의 타입에 맞추어 출력되나 이는 의미없는 값이 된다

conversion Specifier's general form
%m.pX (m and p are integer constants and X is a letter)
- Both m and p are optional; if p is omitted, the period is also omitted.

- the minimum field width, m, specifies the minimum number of characters to print
- The value is right-justified (오른쪽에 붙어서 나오고 왼쪽에 채울 숫자가 없으면 공백)
- m은 최소한의 숫자만을 의미하므로 m을 넘는 자리수가 나오면 그냥 그대로 출력된다.(최대를 제한하는 것은 아니다)
- m 앞에 마이너스 사인을 붙이면 left-justified 상태가 되어 왼쪽에 붙어서 나오고 오른쪽은 공백으로 채워진다

- the precision, p, have multiple meanings depend on X
- the conversion specifier, X, indicates which conversion shold be applied to the value before it is printed

--COMMON TYPE OF X--
d - display an integer in decimal form
  - p indicates the minimum number of digits to display, default is 1
  - p가 m과 다른 점은 p의 경우 채울 숫자가 모자라면 남은 공간을 공백이 아닌 0으로 채운다. 84를 %.4p로 출력하면 0084로 출력한다는 소리
  
e - displays a floating-point number in exponential format
  - p indicates digits after the decimal point (default is 6)
  - If p is 0, decimal point is not displayed

f - display a floating-point number in fixed decimal format
  - p has the same meaning as e specifier

g - displays a floating-point number in either exponential format or fixed decimal format, depending on the number's size.
  - p indicates the maximum number of significant digits to be displayed.
  - not show trailing zeros
  - 소수점 뒤에 숫자가 없으면 소수점도 안 보여줌 
  
Escape Sequences
- Enables strings to contain nonprinting(control) characters and characters that have a special meaning to the compiler(such as ")

3.2 The Scanf function
printf가 특정한 형식에 맞추어 출력하는 것처럼 scanf는 특정한 형식에 맞추어 입력을 읽는다
scanf는 printf와는 다르게 string의 형태가 conversion specifier로만 되어있고 공백없이 붙어있는 경우가 일반적이다 (절대적이지는 않다)
사실 scanf는 자주 쓰이는 함수는 아니고 오히려 모든 데이터를 문자 형태로 읽고 나중에 숫자 형식으로 바꾸는 경우가 일반적이지만 편하니까 초반에는 쓰겠다고 하는구만

